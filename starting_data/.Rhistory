View(areas)
View(areas)
d <- read_csv(file, del)
mv(from = "d", to = str_split(file, ".c")[[1]][1])
d <- read_csv(file)
d
d <- read_csv(file)
d
file <- files[2]
d <- read_csv(file)
d
mv(from = "d", to = str_split(file, ".c")[[1]][1])
str_split(file, ".c")[[1]][1]
View(auth_is_reviewer)
View(auth_is_reviewer)
for (file in files){
d <- read_csv(file)
mv(from = "d", to = str_split(file, ".c")[[1]][1])
}
articles
files
papers
n_paper <- nrow(papers)
n_paper
n_papers <- nrow(papers)
n_papers
n_published_papers <- nrow(papers)*0.8 %>% floor
n_published_papers
nrow(papers)*0.8
nrow(papers)*0.8 %>% floor
n_published_papers <- (nrow(papers)*0.8) %>% floor
n_published_papers
n_papers <- nrow(papers)
# 80% is published
papers <- papers %>% add_column(published=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers))
)
papers
# 80% is published
`papers:bool` <- papers %>% add_column(published=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers))
)
# 80% is published
papers <- papers %>% add_column(`papers:bool`=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers))
)
View(papers)
papers <- papers %>% select(c(`article:ID`, `title:string[]` ))
papers
View(journals)
View(journals)
View(confere)
rm(list=ls())
library(tidyverse)
library(gdata)
dir_path <- "~/Desktop/SDM/LAB_3/BDMA-SDM-Lab-3"
starting_data_path <- paste(dir_path, "/starting_data", sep="")
resources_path <- paste(dir_path, "/src/main/resources", sep="") # directory of final data
setwd(starting_data_path)
files <- list.files()
for (file in files){
d <- read_csv(file)
mv(from = "d", to = str_split(file, ".c")[[1]][1])
}
n_papers <- nrow(papers)
n_published_papers <- (n_papers*0.8) %>% floor
# 80% is published
papers <- papers %>% add_column(`papers:bool`=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers))
)
papers <- papers %>% select(c(`article:ID`, `title:string[]` ))
papers
to = strsplit(file, ".c")
to
file=conferences
file="conferences"
strsplit(file, ".c")
strsplit(file, ".")
?str_split
strsplit(file, "`.`")
files <- list.files()
for (file in files){
d <- read_csv(file)
mv(from = "d", to = strsplit(file, "`.`")[[1]][1])
}
rm(list=lS())
rm(list=ls())
dir_path <- "~/Desktop/SDM/LAB_3/BDMA-SDM-Lab-3"
starting_data_path <- paste(dir_path, "/starting_data", sep="")
resources_path <- paste(dir_path, "/src/main/resources", sep="") # directory of final data
setwd(starting_data_path)
files <- list.files()
for (file in files){
d <- read_csv(file)
mv(from = "d", to = strsplit(file, "`.`")[[1]][1])
}
n_papers <- nrow(papers)
papers
###
# generating publications
# it's done adding a column "published" to papers
###
papers <- articles
file <- files[1]
file
strsplit(file, "`.`")
for (file in files){
d <- read_csv(file)
mv(from = "d", to = strsplit(file, `.`)[[1]][1])
}
strsplit(file, "\.")
strsplit(file, "\\.")
rm(list=ls())
files <- list.files()
for (file in files){
d <- read_csv(file)
mv(from = "d", to = strsplit(file, "\\.")[[1]][1])
}
###
# generating publications
# it's done adding a column "published" to papers
###
papers <- articles
n_papers <- nrow(papers)
n_published_papers <- (n_papers*0.8) %>% floor
# 80% is published
papers <- papers %>% add_column(`papers:bool`=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers))
)
papers <- papers %>% select(c(`article:ID`, `title:string[]` ))
papers
View(conferences)
View(journals)
venues <- tibble(`:ID`=c(conferences$`conference:ID`, journals$`:ID`),
type = c(rep("conference", nrow(conferences))
rep("journal", nrow(journals))))
venues <- tibble(`:ID`=c(conferences$`conference:ID`, journals$`:ID`),
type = c(rep("conference", nrow(conferences)),
rep("journal", nrow(journals))))
venues
conferences
journals
min(conferences$`conference:ID`
)
min(journals$`:ID`
)
View(authors)
setwd(resources_path)
resources_path <- paste(dir_path, "/src/main/resources", sep="") # directory of final data
dir_path <- "~/Desktop/SDM/LAB_3/BDMA-SDM-Lab-3"
starting_data_path <- paste(dir_path, "/starting_data", sep="")
resources_path <- paste(dir_path, "/src/main/resources", sep="") # directory of final data
resources_path
setwd(starting_data_path)
setwd(resources_path)
write_csv(papers)
write_csv(papers, resources_path)
resources_path <- paste(dir_path, "/src/main/resources/", sep="") # directory of final data
write_csv(papers, resources_path)
resources_path
for (file in files){
write_csv(file, paste(resources_path, file))
}
file
dir_path <- "~/Desktop/SDM/LAB_3/BDMA-SDM-Lab-3"
starting_data_path <- paste(dir_path, "/starting_data", sep="")
resources_path <- paste(dir_path, "/src/main/resources/", sep="") # directory of final data
strsplit(file, "\\.")[[1]][1]
write_csv(x=file, paste(resources_path, file))
write_csv(papers, paste(resources_path, papers))
write_csv(papers, paste(resources_path, "papers"))
authors
write_csv(paper_author, paste(resources_path, "submited"))
paper_author
authors
write_csv(paper_author, paste(resources_path, "submited_by"))
n_papers/4
# 80% is published
papers <- papers %>% add_column(`pblished:bool`=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers)),
`type:string`=c(rep(c("full", "short", "demo", "poster"), n_papers/4))
)
n_papers/4
# 80% is published
papers <- papers %>% add_column(`pblished:bool`=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers)),
`type:string`=c(rep(c("full", "short", "demo", "poster"), n_papers/4),"full", "short" )
)
papers
papers <- papers %>% select(c(`article:ID`,
`title:string[]`,
`published:bool`,
`type:string`))
# 80% is published
papers <- papers %>% add_column(`published:bool`=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers)),
`type:string`=c(rep(c("full", "short", "demo", "poster"), n_papers/4),"full", "short" )
)
papers <- papers %>% select(c(`article:ID`,
`title:string[]`,
`published:bool`,
`type:string`))
# 80% is published
papers <- papers %>% add_column(`published:bool`=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers)),
`type:string`=c(rep(c("full", "short", "demo", "poster"), n_papers/4),"full", "short" )
)
papers
View(papers)
papers
# 80% is published
papers <- papers %>% add_column(`published:bool`=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers)),
`type:string`=c(rep(c("full", "short", "demo", "poster"), n_papers/4),"full", "short" )
)
for (file in files){
d <- read_csv(file)
mv(from = "d", to = strsplit(file, "\\.")[[1]][1])
}
dir_path <- "~/Desktop/SDM/LAB_3/BDMA-SDM-Lab-3"
starting_data_path <- paste(dir_path, "/starting_data", sep="")
resources_path <- paste(dir_path, "/src/main/resources/", sep="") # directory of final data
setwd(starting_data_path)
files <- list.files()
for (file in files){
d <- read_csv(file)
mv(from = "d", to = strsplit(file, "\\.")[[1]][1])
}
n_papers <- nrow(papers)
n_published_papers <- (n_papers*0.8) %>% floor
# 80% is published
papers <- papers %>% add_column(`published:bool`=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers)),
`type:string`=c(rep(c("full", "short", "demo", "poster"), n_papers/4),"full", "short" )
)
papers <- papers %>% select(c(`article:ID`,
`title:string[]`,
`published:bool`,
`type:string`))
papers
View(papers_areas)
write_csv(areas, paste(resources_path, "areas"))
write_csv(areas, paste(resources_path, "area"))
View(reviewers_reviews_articles)
View(rewiers)
View(auth_is_reviewer)
View(reviewers_reviews_articles)
View(rewiers)
1:n_papers
revisions <- tibble(`:ID`=1:n_papers,
`accepted:bool`=c( rep(TRUE, n_published_papers),
rep(FALSE, n_papers-n_published_papers)),
`text:string[]`=rep("ABC abc", n_papers)
)
write_csv(revisions, paste(resources_path, "revision"))
###
# regarding
###
regarding <- tibble(`:START_ID`=revisions$`:ID`,
`:END_ID`=papers$`article:ID`)
View(reviewers_reviews_articles)
View(rewiers)
ass_rev
?sample_frac()
###
# reviewers: selected from the authors table
###
reviewers <- authors %>% sample_n(200)
reviewers
rep(revisions$`:ID`,2)
revisions
reviewers
###
# done_by
###
done_by <- tibble(`:START_ID`=rep(revisions$`:ID`,2), # each revision is done by 2 reviewers
`:END_ID`=sample(reviewers$`:ID`, nrow(revisions)*2, replace=TRUE))
done_by
venues
###
# generating venues
###
venues <- tibble(`:ID`=c(conferences$`conference:ID`, journals$`:ID`),
`type:string` = c(rep("conference", nrow(conferences)),
rep("journal", nrow(journals))),
`name:string[]`=c(conferences$`name:string[]`, journals$`journal:string`)
)
###
# generating venues
###
conference_types <- c("Regular", "Workshop", "Symposium", "ExpertGroup")
nrow(conferences)/4
venues <- tibble(`:ID`=c(conferences$`conference:ID`, journals$`:ID`),
`type:string` = c(rep("conference", nrow(conferences)),
rep("journal", nrow(journals))),
`name:string[]`=c(conferences$`name:string[]`, journals$`journal:string`),
`sub_type:string` = c( rep(conference_types, nrow(conferences)/4),
conference_types[1:2],
rep("journal", nrow(journals)))
)
venues
venues <- tibble(`:ID`=c(conferences$`conference:ID`, journals$`:ID`),
`type:string` = c(rep("conference", nrow(conferences)),
rep("journal", nrow(journals))),
`name:string[]`=c(conferences$`name:string[]`, journals$`journal:string`),
`sub_type:string` = c( rep(conference_types, nrow(conferences)/4),
conference_types[1:2],
rep(NA, nrow(journals)))
)
venues
View(venues)
View(chairs)
write_csv(chairs, paste(resources_path, "chair"))
View(chairs_conferences)
write_csv(chairs_conferences, paste(resources_path, "manage_conference"))
volumes
write_csv(proceedings, paste(resources_path, "proceedings"))
write_csv(`proceedings belongs_to_conference`, paste(resources_path, "belongs_to_conference"))
View(areas)
papers_areas
paper_related_to
sort(papers_areas$`:END_ID`)
sort(papers_areas$`:END_ID` %>% unique)
###
# areas
###
areas <- add_column(`:ID`=1:407)
###
# areas
###
areas <- areas %>% add_column(`:ID`=1:407)
###
# areas
###
areas <- areas %>% add_column(`:ID`=1:494)
###
# venue_related_to
###
venue_related_to <- tibble(`:START_ID`=venues$`:ID`,
`:END_ID`=sample(areas$`:ID`, replace = TRUE))
###
# venue_related_to
###
venue_related_to <- tibble(`:START_ID`=venues$`:ID`,
`:END_ID`=sample(areas$`:ID`, nrow(venues), replace = TRUE))
venue_related_to
###
# venue_related_to (only to 1 areas)
###
venue_related_to <- tibble(`:START_ID`=venues$`:ID`,
`:END_ID`=sample(areas$`:ID`, nrow(venues), replace = TRUE))
proceedings
View(proceedings)
venues_publication <- tibble(`:ID`=c(proceedings$`proceedings:ID`,volumes$`volume:ID`),
`type:string` = c(rep("conference", nrow(conferences)),
rep("journal", nrow(journals))),
`name:string[]`=c(proceedings$`booktitle:string` , volumes$`date:date`)
)
venues_publication <- tibble(`:ID`=c(proceedings$`proceedings:ID`,volumes$`volume:ID`),
`name:string[]`=c(proceedings$`booktitle:string` , volumes$`date:date`)
)
venues_publication
View(venues_publication)
?filter
papers
papers %>% filter(`published:bool`==TRUE) %>% select(`article:ID`)
venues_publication
###
# published_in
###
publications_ids <- papers %>% filter(`published:bool`==TRUE) %>% select(`article:ID`)
`:END_ID`= sample(venues_publication$`:ID`, nrow(publications_ids), replace=TRUE)
published_in
published_in <- tibble(`:START_ID`= publications_ids,
published_in <- tibble(`:START_ID`= publications_ids,
`:END_ID`= sample(venues_publication$`:ID`, nrow(publications_ids), replace=TRUE))
write_csv(papers, paste(resources_path, "paper"))
published_in <- tibble(`:START_ID`= publications_ids,
`:END_ID`= sample(venues_publication$`:ID`, nrow(publications_ids), replace=TRUE))
published_in
publications_ids
###
# published_in
###
publications_ids <- papers %>% filter(`published:bool`==TRUE) %>%
select(`article:ID`) %>% as_character
papers %>% filter(`published:bool`==TRUE) %>%
select(`article:ID`) %>% as.character
papers %>% filter(`published:bool`==TRUE) %>%
select(`article:ID`) %>% as_vector
###
# published_in
###
publications_ids <- papers %>% filter(`published:bool`==TRUE) %>%
select(`article:ID`) %>% as_vector
published_in <- tibble(`:START_ID`= publications_ids,
`:END_ID`= sample(venues_publication$`:ID`, nrow(publications_ids), replace=TRUE))
published_in <- tibble(`:START_ID`= publications_ids,
`:END_ID`= sample(venues_publication$`:ID`, length(publications_ids), replace=TRUE))
published_in
###
# submitted_to
###
submitted_to <- tibble(`:START_ID`= publications_ids,
`:END_ID`= sample(venues$`:ID`, length(publications_ids), replace=TRUE))
venues_publication <- tibble(`:ID`=c(proceedings$`proceedings:ID`,volumes$`volume:ID`),
`name:string[]`=c(proceedings$`booktitle:string` , volumes$`date:date`),
`type` = c(rep("proceedings", nrow(proceedings)),
rep("volume", nrow(volumes)))
)
library(tidyverse)
rm(list=ls())
dir_path <- "~/Desktop/SDM/LAB_3/BDMA-SDM-Lab-3"
starting_data_path <- paste(dir_path, "/starting_data", sep="")
resources_path <- paste(dir_path, "/src/main/resources/", sep="") # directory of final data
setwd(starting_data_path)
files <- list.files()
for (file in files){
d <- read_csv(file)
mv(from = "d", to = strsplit(file, "\\.")[[1]][1])
}
n_papers <- nrow(papers)
n_published_papers <- (n_papers*0.8) %>% floor
# 80% is published
papers <- papers %>% add_column(`published:bool`=c(rep(1,n_published_papers),
rep(0, n_papers-n_published_papers)),
`type:string`=c(rep(c("full", "short", "demo", "poster"), n_papers/4),"full", "short" )
)
papers <- papers %>% select(c(`article:ID`,
`title:string[]`,
`published:bool`,
`type:string`))
###
# generating venues
###
conference_types <- c("Regular", "Workshop", "Symposium", "ExpertGroup")
venues <- tibble(`:ID`=c(conferences$`conference:ID`, journals$`:ID`),
`type:string` = c(rep("conference", nrow(conferences)),
rep("journal", nrow(journals))),
`name:string[]`=c(conferences$`name:string[]`, journals$`journal:string`),
`sub_type:string` = c( rep(conference_types, nrow(conferences)/4),
conference_types[1:2],
rep(NA, nrow(journals)))
)
###
# revisions
###
revisions <- tibble(`:ID`=1:n_papers,
`accepted:bool`=c( rep(TRUE, n_published_papers),
rep(FALSE, n_papers-n_published_papers)),
`text:string[]`=rep("ABC abc", n_papers)
)
###
# regarding
###
regarding <- tibble(`:START_ID`=revisions$`:ID`,
`:END_ID`=papers$`article:ID`)
###
# reviewers: selected from the authors table
###
reviewers <- authors %>% sample_n(200)
###
# done_by
###
done_by <- tibble(`:START_ID`=rep(revisions$`:ID`,2), # each revision is done by 2 reviewers
`:END_ID`=sample(reviewers$`:ID`, nrow(revisions)*2, replace=TRUE))
###
# areas
###
areas <- areas %>% add_column(`:ID`=1:494)
###
# venue_related_to (only to 1 areas)
###
venue_related_to <- tibble(`:START_ID`=venues$`:ID`,
`:END_ID`=sample(areas$`:ID`, nrow(venues), replace = TRUE))
venues_publication <- tibble(`:ID`=c(proceedings$`proceedings:ID`,volumes$`volume:ID`),
`name:string[]`=c(proceedings$`booktitle:string` , volumes$`date:date`),
`type` = c(rep("proceedings", nrow(proceedings)),
rep("volume", nrow(volumes)))
)
###
# published_in
###
publications_ids <- papers %>% filter(`published:bool`==TRUE) %>%
select(`article:ID`) %>% as_vector
published_in <- tibble(`:START_ID`= publications_ids,
`:END_ID`= sample(venues_publication$`:ID`, length(publications_ids), replace=TRUE))
###
# submitted_to
###
submitted_to <- tibble(`:START_ID`= publications_ids,
`:END_ID`= sample(venues$`:ID`, length(publications_ids), replace=TRUE))
write_csv(papers, paste(resources_path, "paper"))
write_csv(authors, paste(resources_path, "author"))
write_csv(paper_author, paste(resources_path, "submitted_by"))
write_csv(papers_areas, paste(resources_path, "paper_related_to"))
write_csv(areas, paste(resources_path, "area"))
write_csv(revisions, paste(resources_path, "revision"))
write_csv(regarding, paste(resources_path, "regarding"))
write_csv(reviewers, paste(resources_path, "reviewer"))
write_csv(done_by, paste(resources_path, "done_by"))
write_csv(chairs, paste(resources_path, "chair"))
write_csv(editors, paste(resources_path, "editors"))
write_csv(chairs_conferences, paste(resources_path, "manages_conference"))
write_csv(editors_journals, paste(resources_path, "manages_journal"))
write_csv(volumes, paste(resources_path, "volume"))
write_csv(proceedings, paste(resources_path, "proceedings"))
write_csv(`proceedings belongs_to_conference`, paste(resources_path, "belongs_to_conference"))
write_csv(volumes_belongs_to_journals, paste(resources_path, "belongs_to_journal"))
write_csv(venue_related_to, paste(resources_path, "venue_related_to"))
write_csv(published_in, paste(resources_path, "published_in"))
write_csv(submitted_to, paste(resources_path, "submitted_to"))
